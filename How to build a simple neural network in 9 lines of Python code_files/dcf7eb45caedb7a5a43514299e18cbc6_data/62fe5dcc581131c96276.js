document.write('<link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-13deff4f8c8e95f7a1da017b6983e81f.css">')
document.write('<div id=\"gist24477876\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-short_version-py\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"blob-wrapper data type-python \">\n      \n\n\n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-short_version-py-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"><\/td>\n        <td id=\"file-short_version-py-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from<\/span> numpy <span class=\"pl-k\">import<\/span> exp, array, random, dot<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-short_version-py-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"><\/td>\n        <td id=\"file-short_version-py-LC2\" class=\"blob-code blob-code-inner js-file-line\">training_set_inputs <span class=\"pl-k\">=<\/span> array([[<span class=\"pl-c1\">0<\/span>, <span class=\"pl-c1\">0<\/span>, <span class=\"pl-c1\">1<\/span>], [<span class=\"pl-c1\">1<\/span>, <span class=\"pl-c1\">1<\/span>, <span class=\"pl-c1\">1<\/span>], [<span class=\"pl-c1\">1<\/span>, <span class=\"pl-c1\">0<\/span>, <span class=\"pl-c1\">1<\/span>], [<span class=\"pl-c1\">0<\/span>, <span class=\"pl-c1\">1<\/span>, <span class=\"pl-c1\">1<\/span>]])<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-short_version-py-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"><\/td>\n        <td id=\"file-short_version-py-LC3\" class=\"blob-code blob-code-inner js-file-line\">training_set_outputs <span class=\"pl-k\">=<\/span> array([[<span class=\"pl-c1\">0<\/span>, <span class=\"pl-c1\">1<\/span>, <span class=\"pl-c1\">1<\/span>, <span class=\"pl-c1\">0<\/span>]]).T<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-short_version-py-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"><\/td>\n        <td id=\"file-short_version-py-LC4\" class=\"blob-code blob-code-inner js-file-line\">random.seed(<span class=\"pl-c1\">1<\/span>)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-short_version-py-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"><\/td>\n        <td id=\"file-short_version-py-LC5\" class=\"blob-code blob-code-inner js-file-line\">synaptic_weights <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">2<\/span> <span class=\"pl-k\">*<\/span> random.random((<span class=\"pl-c1\">3<\/span>, <span class=\"pl-c1\">1<\/span>)) <span class=\"pl-k\">-<\/span> <span class=\"pl-c1\">1<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-short_version-py-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"><\/td>\n        <td id=\"file-short_version-py-LC6\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">for<\/span> iteration <span class=\"pl-k\">in<\/span> <span class=\"pl-v\">xrange<\/span>(<span class=\"pl-c1\">10000<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-short_version-py-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"><\/td>\n        <td id=\"file-short_version-py-LC7\" class=\"blob-code blob-code-inner js-file-line\">    output <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">1<\/span> <span class=\"pl-k\">/<\/span> (<span class=\"pl-c1\">1<\/span> <span class=\"pl-k\">+<\/span> exp(<span class=\"pl-k\">-<\/span>(dot(training_set_inputs, synaptic_weights))))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-short_version-py-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"><\/td>\n        <td id=\"file-short_version-py-LC8\" class=\"blob-code blob-code-inner js-file-line\">    synaptic_weights <span class=\"pl-k\">+=<\/span> dot(training_set_inputs.T, (training_set_outputs <span class=\"pl-k\">-<\/span> output) <span class=\"pl-k\">*<\/span> output <span class=\"pl-k\">*<\/span> (<span class=\"pl-c1\">1<\/span> <span class=\"pl-k\">-<\/span> output))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-short_version-py-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"><\/td>\n        <td id=\"file-short_version-py-LC9\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c1\">print<\/span> <span class=\"pl-c1\">1<\/span> <span class=\"pl-k\">/<\/span> (<span class=\"pl-c1\">1<\/span> <span class=\"pl-k\">+<\/span> exp(<span class=\"pl-k\">-<\/span>(dot(array([<span class=\"pl-c1\">1<\/span>, <span class=\"pl-c1\">0<\/span>, <span class=\"pl-c1\">0<\/span>]), synaptic_weights))))<\/td>\n      <\/tr>\n<\/table>\n\n\n  <\/div>\n\n  <\/div>\n<\/div>\n\n      <\/div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/miloharper/62fe5dcc581131c96276/raw/68145c6ac966617a8d1ef46f2d19df8909808620/short_version.py\" style=\"float:right\">view raw<\/a>\n        <a href=\"https://gist.github.com/miloharper/62fe5dcc581131c96276#file-short_version-py\">short_version.py<\/a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub<\/a>\n      <\/div>\n    <\/div>\n<\/div>\n')
